{"version":3,"file":"js/967.js","mappings":"4LAYaA,EAA6B,SAAHC,GAAsB,IAAhBC,EAASD,EAATC,UACnCC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAArBF,MACAG,GAAMC,EAAAA,EAAAA,MAAND,EAIR,OAFwBE,EAAAA,EAAAA,IAAYC,EAAAA,EAAcC,kBAI9CC,EAAAA,cAACC,EAAAA,EAAU,CACTV,WAAWW,EAAAA,EAAAA,GAAGX,GACdY,MAAiB,SAAVX,EAAmB,QAAU,QACpCY,KAAK,OACLC,GAAG,uBAEFV,EAAE,2BAIX,EClBaW,EAA4B,SAAHhB,GAAsB,IAAhBC,EAASD,EAATC,UAClCC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAArBF,MACAG,GAAMC,EAAAA,EAAAA,MAAND,EAIR,OAFwBE,EAAAA,EAAAA,IAAYC,EAAAA,EAAcC,kBAI9CC,EAAAA,cAACC,EAAAA,EAAU,CACTV,WAAWW,EAAAA,EAAAA,GAAGX,GACdY,MAAiB,SAAVX,EAAmB,QAAU,QACpCY,KAAK,OACLC,GAAG,sBAEFV,EAAE,0BAIX,E,oBCvBaY,EAAY,WACvB,IAAQZ,GAAMC,EAAAA,EAAAA,MAAND,EACR,OACEK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACQ,EAAAA,EAAS,KACRR,EAAAA,cAAA,WAAKS,EAAAA,EAAAA,GAAed,EAAE,oCAExBK,EAAAA,cAACQ,EAAAA,EAAS,KACRR,EAAAA,cAAA,OAAKU,MAAO,CAAEC,QAAS,OAAQC,IAAK,OAAQC,oBAAqB,oBAC/Db,EAAAA,cAACM,EAAc,MACfN,EAAAA,cAACX,EAAe,QAK1B,C","sources":["webpack:///./features/addCategoryIcon/index.tsx","webpack:///./features/addProductIcon/index.tsx","webpack:///./pages/admin/index.tsx"],"sourcesContent":["import React, { FC, useContext } from 'react';\nimport cn from 'clsx';\nimport { ThemeContext } from 'src/app/theme';\nimport { ButtonIcon } from 'src/shared/buttonIcon';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'src/entities/auth/store';\n\ninterface Props {\n  className?: string;\n}\n\nexport const AddCategoryIcon: FC<Props> = ({ className }) => {\n  const { theme } = useContext(ThemeContext);\n  const { t } = useTranslation();\n\n  const isAuthenticated = useSelector(authSelectors.isAuthenticated);\n\n  return (\n    isAuthenticated && (\n      <ButtonIcon\n        className={cn(className)}\n        color={theme === 'dark' ? 'black' : 'white'}\n        icon=\"plus\"\n        to=\"/admin/add-category\"\n      >\n        {t('translation:addCategory')}\n      </ButtonIcon>\n    )\n  );\n};\n","import React, { FC, useContext } from 'react';\nimport cn from 'clsx';\nimport { ThemeContext } from 'src/app/theme';\nimport { ButtonIcon } from 'src/shared/buttonIcon';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'src/entities/auth/store';\n\ninterface Props {\n  className?: string;\n}\n\nexport const AddProductIcon: FC<Props> = ({ className }) => {\n  const { theme } = useContext(ThemeContext);\n  const { t } = useTranslation();\n\n  const isAuthenticated = useSelector(authSelectors.isAuthenticated);\n\n  return (\n    isAuthenticated && (\n      <ButtonIcon\n        className={cn(className)}\n        color={theme === 'dark' ? 'black' : 'white'}\n        icon=\"plus\"\n        to=\"/admin/add-product\"\n      >\n        {t('translation:addProduct')}\n      </ButtonIcon>\n    )\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { AddCategoryIcon } from 'src/features/addCategoryIcon';\nimport { AddProductIcon } from 'src/features/addProductIcon';\nimport { Container } from 'src/shared/container';\nimport { firstUppercase } from 'src/shared/lib/firstUppercase';\n\nexport const AdminPage = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Container>\n        <h1>{firstUppercase(t('translation:adminSectionTitle'))}</h1>\n      </Container>\n      <Container>\n        <div style={{ display: 'grid', gap: '1rem', gridTemplateColumns: '1fr 1fr 1fr 1fr' }}>\n          <AddProductIcon />\n          <AddCategoryIcon />\n        </div>\n      </Container>\n    </>\n  );\n};\n"],"names":["AddCategoryIcon","_ref","className","theme","useContext","ThemeContext","t","useTranslation","useSelector","authSelectors","isAuthenticated","React","ButtonIcon","cn","color","icon","to","AddProductIcon","AdminPage","Container","firstUppercase","style","display","gap","gridTemplateColumns"],"sourceRoot":""}