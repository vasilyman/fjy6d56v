{"version":3,"file":"js/508.js","mappings":"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","sources":["webpack:///./features/forms/categoryForm/index.tsx","webpack:///./features/forms/categoryForm/style.module.scss?5ce3","webpack:///./features/editCategory/index.tsx","webpack:///./features/editCategory/style.module.scss?3425","webpack:///./pages/editCategoryPage/index.tsx"],"sourcesContent":["import React from 'react';\nimport { TitleField } from '../common/titleField';\nimport { ImageField } from '../common/imageField';\nimport $style from './style.module.scss';\nimport type { CategoryFormData } from './type';\nimport { ControlProps } from '../types';\nimport { useTranslation } from 'react-i18next';\n\nexport const CategoryForm = ({ control }: ControlProps<CategoryFormData>) => {\n  const { t } = useTranslation();\n  return (\n    <div className={$style['form']}>\n      <ImageField control={control} name=\"imgUrl\" />\n      <TitleField control={control} name=\"title\" label={t('translation:categoryTitle')} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"style-module_form-HBsKi\"};","import type { FC } from 'react';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '../../shared/button';\nimport $style from './style.module.scss';\nimport { useTranslation } from 'react-i18next';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'src/entities/auth/store';\nimport { CategoryUpdateInput, Mutation, Query } from 'src/app/apollo/type';\nimport { CategoryForm } from '../forms/categoryForm';\nimport { CategoryFormData } from '../forms/categoryForm/type';\n\nconst categoryPatchMutation = gql`\n  mutation Patch($patchId: ID!, $input: CategoryUpdateInput!) {\n    categories {\n      patch(id: $patchId, input: $input) {\n        id\n      }\n    }\n  }\n`;\n\nconst categoryGet = gql`\n  query GetOne($getOneId: ID!) {\n    categories {\n      getOne(id: $getOneId) {\n        id\n        name\n        photo\n        createdAt\n        updatedAt\n        commandId\n      }\n    }\n  }\n`;\n\nenum ECategoryAddStatus {\n  IDDLE,\n  ADDED,\n  ERROR,\n}\n\nexport const EditCategory: FC<{ categoryId: string }> = ({ categoryId }) => {\n  const {\n    control,\n    handleSubmit,\n    formState: { isSubmitting, errors },\n    getValues,\n    setError,\n    setValue,\n  } = useForm<CategoryFormData>({\n    defaultValues: {\n      imgUrl: '',\n      title: '',\n    },\n    mode: 'all',\n  });\n\n  const [categoryAddStatus, setCategoryAddStatusStatus] = useState<ECategoryAddStatus>(ECategoryAddStatus.IDDLE);\n\n  const accessToken = useSelector(authSelectors.getAccess);\n\n  const { data: categoryRaw } = useQuery<Pick<Query, 'categories'>, { getOneId: string }>(categoryGet, {\n    skip: !accessToken,\n    context: {\n      headers: {\n        authorization: `Bearer ${accessToken}`,\n      },\n    },\n    variables: {\n      getOneId: categoryId,\n    },\n  });\n\n  useEffect(() => {\n    if (!categoryRaw) return;\n\n    const { photo, name } = categoryRaw.categories.getOne;\n\n    setValue('imgUrl', photo ?? '');\n    setValue('title', name ?? '');\n  }, [categoryRaw, setValue]);\n\n  const [categoryEdit] = useMutation<Pick<Mutation, 'categories'>, { input: CategoryUpdateInput; patchId: string }>(\n    categoryPatchMutation,\n    {\n      context: {\n        headers: {\n          authorization: `Bearer ${accessToken}`,\n        },\n      },\n      // TODO remove after backend will support subscriotpions\n      update(cache) {\n        cache.evict({ fieldName: 'categories' });\n        cache.gc();\n      },\n    }\n  );\n\n  const onSubmit = (data: CategoryFormData) => {\n    return categoryEdit({\n      variables: {\n        patchId: categoryId,\n        input: {\n          name: data.title,\n          photo: data.imgUrl,\n        },\n      },\n    })\n      .then((res) => {\n        setCategoryAddStatusStatus(ECategoryAddStatus.ADDED);\n        console.log(res.data.categories.patch.id);\n      })\n      .catch((e) => {\n        setCategoryAddStatusStatus(ECategoryAddStatus.ERROR);\n        setError('root', e);\n        console.log(e);\n      });\n  };\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    setCategoryAddStatusStatus(ECategoryAddStatus.IDDLE);\n  }, [categoryId]);\n\n  return (\n    <div className={$style['category']}>\n      <CategoryForm control={control} />\n      <Button label={t('translation:save')} block disabled={isSubmitting} onClick={handleSubmit(onSubmit)} />\n      {categoryAddStatus === ECategoryAddStatus.ERROR && <div>Ошибка: {errors.root.message}</div>}\n      {categoryAddStatus === ECategoryAddStatus.ADDED && <div>Сохранено {getValues('title')}</div>}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"category\":\"style-module_category-x1YKl\"};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router';\nimport { EditCategory } from 'src/features/editCategory';\nimport { Container } from 'src/shared/container';\nimport { firstUppercase } from 'src/shared/lib/firstUppercase';\n\nexport const EditCategoryPage = () => {\n  const { t } = useTranslation();\n  const { categoryId } = useParams();\n  return (\n    <>\n      <Container>\n        <h1>\n          {firstUppercase(t('translation:editCategory'))} {categoryId}\n        </h1>\n      </Container>\n      <Container>\n        <EditCategory categoryId={categoryId} />\n      </Container>\n    </>\n  );\n};\n"],"names":["CategoryForm","_ref","control","t","useTranslation","React","className","ImageField","name","TitleField","label","categoryPatchMutation","gql","_templateObject","_taggedTemplateLiteral","categoryGet","_templateObject2","ECategoryAddStatus","EditCategory","categoryId","_useForm","useForm","defaultValues","imgUrl","title","mode","handleSubmit","_useForm$formState","formState","isSubmitting","errors","getValues","setError","setValue","_useState2","_slicedToArray","useState","IDDLE","categoryAddStatus","setCategoryAddStatusStatus","accessToken","useSelector","authSelectors","getAccess","categoryRaw","useQuery","skip","context","headers","authorization","concat","variables","getOneId","data","useEffect","_categoryRaw$categori","categories","getOne","photo","categoryEdit","useMutation","update","cache","evict","fieldName","gc","Button","block","disabled","onClick","patchId","input","then","res","ADDED","console","log","patch","id","e","ERROR","root","message","EditCategoryPage","useParams","Container","firstUppercase"],"sourceRoot":""}