{"version":3,"file":"js/601.js","mappings":"oJAQaA,EAAe,SAAHC,GAAoD,IAA9CC,EAAOD,EAAPC,QACrBC,GAAMC,EAAAA,EAAAA,MAAND,EACR,OACEE,EAAAA,cAAA,OAAKC,UCVc,2BDWjBD,EAAAA,cAACE,EAAAA,EAAU,CAACL,QAASA,EAASM,KAAK,WACnCH,EAAAA,cAACI,EAAAA,EAAU,CAACP,QAASA,EAASM,KAAK,QAAQE,MAAOP,EAAE,+BAG1D,C,2pCEHA,I,IAAMQ,GAAsBC,EAAAA,EAAAA,IAAGC,I,EAAA,mI,kBAAAA,E,2EAU1BC,EAAkB,SAAlBA,GAAkB,OAAlBA,EAAAA,EAAkB,iBAAlBA,EAAAA,EAAkB,iBAAlBA,EAAAA,EAAkB,iBAAlBA,CAAkB,EAAlBA,GAAkB,IAMVC,EAAkB,WAC7B,IAAAC,GAMIC,EAAAA,EAAAA,IAA0B,CAC5BC,cAAe,CACbC,OAAQ,GACRC,MAAO,IAETC,KAAM,QAVNnB,EAAOc,EAAPd,QACAoB,EAAYN,EAAZM,aAAYC,EAAAP,EACZQ,UAAaC,EAAYF,EAAZE,aAAcC,EAAMH,EAANG,OAC3BC,EAASX,EAATW,UACAC,EAAQZ,EAARY,SAS4GC,EAAAC,GAAtDC,EAAAA,EAAAA,UAA6BjB,EAAmBkB,OAAM,GAAvGC,EAAiBJ,EAAA,GAAEK,EAA0BL,EAAA,GAE9CM,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,EAAcC,WAEvCC,EAWLT,GAXoBU,EAAAA,EAAAA,GAAuE7B,EAAqB,CAChH8B,QAAS,CACPC,QAAS,CACPC,cAAe,UAAFC,OAAYT,KAI7BU,OAAM,SAACC,GACLA,EAAMC,MAAM,CAAEC,UAAW,eACzBF,EAAMG,IACR,IACA,GAXgB,GAgCV9C,GAAMC,EAAAA,EAAAA,MAAND,EAER,OACEE,EAAAA,cAAA,OAAKC,UClFsB,mCDmFxB2B,IAAsBnB,EAAmBoC,MACxC7C,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACL,EAAAA,EAAY,CAACE,QAASA,IACvBG,EAAAA,cAAC8C,EAAAA,EAAM,CAACzC,MAAOP,EAAE,oBAAqBiD,OAAK,EAACC,SAAU5B,EAAc6B,QAAShC,GA1BpE,SAACiC,GAChB,OAAOhB,EAAY,CACjBiB,UAAW,CACTC,MAAO,CACLjD,KAAM+C,EAAKnC,MACXsC,MAAOH,EAAKpC,WAIfwC,MAAK,SAACC,GACL1B,EAA2BpB,EAAmBoC,OAC9CW,QAAQC,IAAIF,EAAIL,KAAKQ,WAAWC,IAAIC,GACtC,IAAE,OACK,SAACC,GACNhC,EAA2BpB,EAAmBqD,OAC9CvC,EAAS,OAAQsC,EACnB,GACJ,MAUSjC,IAAsBnB,EAAmBqD,OAAS9D,EAAAA,cAAA,WAAK,WAASqB,EAAO0C,KAAKC,UAG/EhE,EAAAA,cAAA,WAAK,6BAA2BsB,EAAU,UAIlD,E,oBEzFa2C,EAAkB,WAC7B,IAAQnE,GAAMC,EAAAA,EAAAA,MAAND,EACR,OACEE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACkE,EAAAA,EAAS,KACRlE,EAAAA,cAAA,WAAKmE,EAAAA,EAAAA,GAAerE,EAAE,8BAExBE,EAAAA,cAACkE,EAAAA,EAAS,KACRlE,EAAAA,cAACU,EAAW,OAIpB,C","sources":["webpack:///./features/forms/categoryForm/index.tsx","webpack:///./features/forms/categoryForm/style.module.scss?5ce3","webpack:///./features/addCategory/index.tsx","webpack:///./features/addCategory/style.module.scss?911b","webpack:///./pages/addCategoryPage/index.tsx"],"sourcesContent":["import React from 'react';\nimport { TitleField } from '../common/titleField';\nimport { ImageField } from '../common/imageField';\nimport $style from './style.module.scss';\nimport type { CategoryFormData } from './type';\nimport { ControlProps } from '../types';\nimport { useTranslation } from 'react-i18next';\n\nexport const CategoryForm = ({ control }: ControlProps<CategoryFormData>) => {\n  const { t } = useTranslation();\n  return (\n    <div className={$style['form']}>\n      <ImageField control={control} name=\"imgUrl\" />\n      <TitleField control={control} name=\"title\" label={t('translation:categoryTitle')} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"style-module_form-HBsKi\"};","import type { FC } from 'react';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '../../shared/button';\nimport $style from './style.module.scss';\nimport { useTranslation } from 'react-i18next';\nimport { gql, useMutation } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'src/entities/auth/store';\nimport { CategoryAddInput, Mutation } from 'src/app/apollo/type';\nimport { CategoryForm } from '../forms/categoryForm';\nimport { CategoryFormData } from '../forms/categoryForm/type';\n\nconst categoryAddMutation = gql`\n  mutation Add($input: CategoryAddInput!) {\n    categories {\n      add(input: $input) {\n        id\n      }\n    }\n  }\n`;\n\nenum ECategoryAddStatus {\n  IDDLE,\n  ADDED,\n  ERROR,\n}\n\nexport const AddCategory: FC = () => {\n  const {\n    control,\n    handleSubmit,\n    formState: { isSubmitting, errors },\n    getValues,\n    setError,\n  } = useForm<CategoryFormData>({\n    defaultValues: {\n      imgUrl: '',\n      title: '',\n    },\n    mode: 'all',\n  });\n\n  const [categoryAddStatus, setCategoryAddStatusStatus] = useState<ECategoryAddStatus>(ECategoryAddStatus.IDDLE);\n\n  const accessToken = useSelector(authSelectors.getAccess);\n\n  const [categoryAdd] = useMutation<Pick<Mutation, 'categories'>, { input: CategoryAddInput }>(categoryAddMutation, {\n    context: {\n      headers: {\n        authorization: `Bearer ${accessToken}`,\n      },\n    },\n    // TODO remove after backend will support subscriotpions\n    update(cache) {\n      cache.evict({ fieldName: 'categories' });\n      cache.gc();\n    },\n  });\n\n  const onSubmit = (data: CategoryFormData) => {\n    return categoryAdd({\n      variables: {\n        input: {\n          name: data.title,\n          photo: data.imgUrl,\n        },\n      },\n    })\n      .then((res) => {\n        setCategoryAddStatusStatus(ECategoryAddStatus.ADDED);\n        console.log(res.data.categories.add.id);\n      })\n      .catch((e) => {\n        setCategoryAddStatusStatus(ECategoryAddStatus.ERROR);\n        setError('root', e);\n      });\n  };\n\n  const { t } = useTranslation();\n\n  return (\n    <div className={$style['add-category']}>\n      {categoryAddStatus !== ECategoryAddStatus.ADDED ? (\n        <>\n          <CategoryForm control={control} />\n          <Button label={t('translation:save')} block disabled={isSubmitting} onClick={handleSubmit(onSubmit)} />\n          {categoryAddStatus === ECategoryAddStatus.ERROR && <div>Ошибка: {errors.root.message}</div>}\n        </>\n      ) : (\n        <div>Добавлена новая категория {getValues('title')}</div>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"add-category\":\"style-module_add-category-gT8s6\"};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { AddCategory } from 'src/features/addCategory';\nimport { Container } from 'src/shared/container';\nimport { firstUppercase } from 'src/shared/lib/firstUppercase';\n\nexport const AddCategoryPage = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Container>\n        <h1>{firstUppercase(t('translation:addCategory'))}</h1>\n      </Container>\n      <Container>\n        <AddCategory />\n      </Container>\n    </>\n  );\n};\n"],"names":["CategoryForm","_ref","control","t","useTranslation","React","className","ImageField","name","TitleField","label","categoryAddMutation","gql","_templateObject","ECategoryAddStatus","AddCategory","_useForm","useForm","defaultValues","imgUrl","title","mode","handleSubmit","_useForm$formState","formState","isSubmitting","errors","getValues","setError","_useState2","_slicedToArray","useState","IDDLE","categoryAddStatus","setCategoryAddStatusStatus","accessToken","useSelector","authSelectors","getAccess","categoryAdd","useMutation","context","headers","authorization","concat","update","cache","evict","fieldName","gc","ADDED","Button","block","disabled","onClick","data","variables","input","photo","then","res","console","log","categories","add","id","e","ERROR","root","message","AddCategoryPage","Container","firstUppercase"],"sourceRoot":""}