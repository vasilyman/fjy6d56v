{"version":3,"file":"js/494.js","mappings":"wsCAaA,I,IAAMA,GAAqBC,EAAAA,EAAAA,IAAGC,I,EAAA,gI,kBAAAA,E,2EAUzBC,EAAiB,SAAjBA,GAAiB,OAAjBA,EAAAA,EAAiB,iBAAjBA,EAAAA,EAAiB,iBAAjBA,EAAAA,EAAiB,iBAAjBA,CAAiB,EAAjBA,GAAiB,IAMTC,EAAiB,WAC5B,IAAAC,GAMIC,EAAAA,EAAAA,IAAyB,CAC3BC,cAAe,CACbC,OAAQ,GACRC,MAAO,GACPC,YAAa,GACbC,IAAK,GAEPC,KAAM,QAZNC,EAAOR,EAAPQ,QACAC,EAAYT,EAAZS,aAAYC,EAAAV,EACZW,UAAaC,EAAYF,EAAZE,aAAcC,EAAMH,EAANG,OAC3BC,EAASd,EAATc,UACAC,EAAQf,EAARe,SAWwGC,EAAAC,GAApDC,EAAAA,EAAAA,UAA4BpB,EAAkBqB,OAAM,GAAnGC,EAAgBJ,EAAA,GAAEK,EAAyBL,EAAA,GAE5CM,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,EAAcC,WAEvCC,EAMLT,GANmBU,EAAAA,EAAAA,GAAoEhC,EAAoB,CAC3GiC,QAAS,CACPC,QAAS,CACPC,cAAe,UAAFC,OAAYT,OAG7B,GANe,GA8BTU,GAAMC,EAAAA,EAAAA,MAAND,EAER,OACEE,EAAAA,cAAA,OAAKC,UClFsB,mCDmFxBf,IAAqBtB,EAAkBsC,MACtCF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACG,EAAAA,EAAW,CAAC7B,QAASA,IACtB0B,EAAAA,cAACI,EAAAA,EAAM,CAACC,MAAOP,EAAE,oBAAqBQ,OAAK,EAACC,SAAU7B,EAAc8B,QAASjC,GA7BpE,SAACkC,GAChB,OAAOjB,EAAW,CAChBkB,UAAW,CACTC,MAAO,CACLC,WAAYH,EAAKG,WACjBC,KAAMJ,EAAKtC,YACX2C,KAAML,EAAKvC,MACX6C,MAAON,EAAKxC,OACZ+C,MAAOP,EAAKrC,QAIf6C,MAAK,SAACC,GACL/B,EAA0BvB,EAAkBsC,OAC5CiB,QAAQC,IAAIF,EAAIT,KAAKY,SAASC,IAAIC,GACpC,IAAE,OACK,SAACC,GACNrC,EAA0BvB,EAAkB6D,OAC5C5C,EAAS,OAAQ2C,EACnB,GACJ,MAUStC,IAAqBtB,EAAkB6D,OAASzB,EAAAA,cAAA,WAAK,WAASrB,EAAO+C,KAAKC,UAG7E3B,EAAAA,cAAA,WAAK,wBAAsBpB,EAAU,UAI7C,C,4GEzFagD,EAAiB,WAC5B,IAAQ9B,GAAMC,EAAAA,EAAAA,MAAND,EACR,OACEE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC6B,EAAAA,EAAS,KACR7B,EAAAA,cAAA,WAAK8B,EAAAA,EAAAA,GAAehC,EAAE,6BAExBE,EAAAA,cAAC6B,EAAAA,EAAS,KACR7B,EAAAA,cAACnC,EAAAA,EAAU,OAInB,C","sources":["webpack:///./features/addProduct/index.tsx","webpack:///./features/addProduct/style.module.scss?91a2","webpack:///./pages/addProductPage/index.tsx"],"sourcesContent":["import type { FC } from 'react';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ProductForm } from '../forms/productForm';\nimport { Button } from '../../shared/button';\nimport $style from './style.module.scss';\nimport type { ProductFormData } from '../forms/productForm/type';\nimport { useTranslation } from 'react-i18next';\nimport { gql, useMutation } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'src/entities/auth/store';\nimport { Mutation, ProductAddInput } from 'src/app/apollo/type';\n\nconst productAddMutation = gql`\n  mutation Add($input: ProductAddInput!) {\n    products {\n      add(input: $input) {\n        id\n      }\n    }\n  }\n`;\n\nenum EProductAddStatus {\n  IDDLE,\n  ADDED,\n  ERROR,\n}\n\nexport const AddProduct: FC = () => {\n  const {\n    control,\n    handleSubmit,\n    formState: { isSubmitting, errors },\n    getValues,\n    setError,\n  } = useForm<ProductFormData>({\n    defaultValues: {\n      imgUrl: '',\n      title: '',\n      description: '',\n      sum: 0,\n    },\n    mode: 'all',\n  });\n\n  const [productAddStatus, setProductAddStatusStatus] = useState<EProductAddStatus>(EProductAddStatus.IDDLE);\n\n  const accessToken = useSelector(authSelectors.getAccess);\n\n  const [productAdd] = useMutation<Pick<Mutation, 'products'>, { input: ProductAddInput }>(productAddMutation, {\n    context: {\n      headers: {\n        authorization: `Bearer ${accessToken}`,\n      },\n    },\n  });\n\n  const onSubmit = (data: ProductFormData) => {\n    return productAdd({\n      variables: {\n        input: {\n          categoryId: data.categoryId,\n          desc: data.description,\n          name: data.title,\n          photo: data.imgUrl,\n          price: data.sum,\n        },\n      },\n    })\n      .then((res) => {\n        setProductAddStatusStatus(EProductAddStatus.ADDED);\n        console.log(res.data.products.add.id);\n      })\n      .catch((e) => {\n        setProductAddStatusStatus(EProductAddStatus.ERROR);\n        setError('root', e);\n      });\n  };\n\n  const { t } = useTranslation();\n\n  return (\n    <div className={$style['edit-product']}>\n      {productAddStatus !== EProductAddStatus.ADDED ? (\n        <>\n          <ProductForm control={control} />\n          <Button label={t('translation:save')} block disabled={isSubmitting} onClick={handleSubmit(onSubmit)} />\n          {productAddStatus === EProductAddStatus.ERROR && <div>Ошибка: {errors.root.message}</div>}\n        </>\n      ) : (\n        <div>Добавлен новый товар {getValues('title')}</div>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"edit-product\":\"style-module_edit-product-KmUeJ\"};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { AddProduct } from 'src/features/addProduct';\nimport { Container } from 'src/shared/container';\nimport { firstUppercase } from 'src/shared/lib/firstUppercase';\n\nexport const AddProductPage = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Container>\n        <h1>{firstUppercase(t('translation:addProduct'))}</h1>\n      </Container>\n      <Container>\n        <AddProduct />\n      </Container>\n    </>\n  );\n};\n"],"names":["productAddMutation","gql","_templateObject","EProductAddStatus","AddProduct","_useForm","useForm","defaultValues","imgUrl","title","description","sum","mode","control","handleSubmit","_useForm$formState","formState","isSubmitting","errors","getValues","setError","_useState2","_slicedToArray","useState","IDDLE","productAddStatus","setProductAddStatusStatus","accessToken","useSelector","authSelectors","getAccess","productAdd","useMutation","context","headers","authorization","concat","t","useTranslation","React","className","ADDED","ProductForm","Button","label","block","disabled","onClick","data","variables","input","categoryId","desc","name","photo","price","then","res","console","log","products","add","id","e","ERROR","root","message","AddProductPage","Container","firstUppercase"],"sourceRoot":""}