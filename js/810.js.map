{"version":3,"file":"js/810.js","mappings":"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","sources":["webpack:///./widgets/cartList/style.module.scss?2cd1","webpack:///./widgets/cartItem/style.module.scss?d171","webpack:///./features/removeFromCart/index.tsx","webpack:///./features/removeFromCart/style.module.scss?18ef","webpack:///./widgets/cartItem/index.tsx","webpack:///./widgets/cartList/index.tsx","webpack:///./features/addOrder/index.tsx","webpack:///./widgets/cartTotal/style.module.scss?d999","webpack:///./widgets/cartTotal/index.tsx","webpack:///./pages/cartPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cart-list\":\"style-module_cart-list-FPGZh\",\"cart-list__empty\":\"style-module_cart-list__empty-fsM4X\"};","// extracted by mini-css-extract-plugin\nexport default {\"cart-item\":\"style-module_cart-item-z1TeO\",\"cart-item__row\":\"style-module_cart-item__row-FoeA2\",\"cart-item__image\":\"style-module_cart-item__image-VTGmV\",\"cart-item__content\":\"style-module_cart-item__content-U9WW7\",\"cart-item__title\":\"style-module_cart-item__title-F4AE0\",\"cart-item__description\":\"style-module_cart-item__description-BeOPp\",\"cart-item__action\":\"style-module_cart-item__action-aCDiE\",\"cart-item__sum\":\"style-module_cart-item__sum-Dbis5\",\"ellipsis\":\"style-module_ellipsis-IAM2m\"};","import React, { FC, useMemo } from 'react';\nimport cn from 'clsx';\nimport $style from './style.module.scss';\nimport { Icon } from '../../shared';\nimport { useGetCartQuery, useRemoveProductFromCartMutation } from 'src/entities/cart/store';\n\ninterface RemoveFromCartProps {\n  id: string;\n  className?: string;\n}\n\nexport const RemoveFromCart: FC<RemoveFromCartProps> = ({ id, className }) => {\n  const [removeProduct] = useRemoveProductFromCartMutation();\n  const { data: cart } = useGetCartQuery(null);\n\n  const qty = useMemo(() => {\n    return cart?.find((item) => item.id === id)?.qty ?? 0;\n  }, [cart, id]);\n\n  const onDelete = () => {\n    return removeProduct([{ id, qty }]);\n  };\n\n  return (\n    <button\n      type=\"button\"\n      title=\"Убрать из корзины\"\n      className={cn($style['remove-from-cart'], className)}\n      onClick={onDelete}\n    >\n      <Icon name=\"trash\" size=\"24\" />\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"remove-from-cart\":\"style-module_remove-from-cart-y75pS\"};","import React, { FC } from 'react';\nimport $style from './style.module.scss';\nimport cn from 'clsx';\nimport { AddToCard } from 'src/features';\nimport { TProduct } from 'src/entities/product';\nimport { RemoveFromCart } from 'src/features/removeFromCart';\nimport { Tcategory } from 'src/entities/category/type';\n\nexport interface CartItemProps {\n  id: string;\n  sum: number;\n  imgUrl?: string;\n  title: string;\n  className?: string;\n  description?: string;\n  category: Tcategory;\n}\n\nexport const CartItem: FC<CartItemProps> = ({ sum, imgUrl, title, description, id, category }) => {\n  const sumFormatted = new Intl.NumberFormat('ru-RU', { maximumSignificantDigits: 3 }).format(sum);\n\n  const product: TProduct = {\n    id,\n    category,\n    title,\n    sum,\n    description,\n    imgUrl,\n  };\n\n  return (\n    <>\n      <section className={$style['cart-item__row']}>\n        <img className={cn($style['cart-item__image'])} src={imgUrl} />\n        <div className={cn($style['cart-item__content'])}>\n          <div className={cn($style['cart-item__title'])}>{title}</div>\n          <div className={cn($style['cart-item__description'])}>{description}</div>\n        </div>\n        <div className={$style['cart-item__action']}>\n          <div className={$style['cart-item__sum']} title={sumFormatted}>\n            <span className={$style['ellipsis']}>{sumFormatted}</span>\n            <span>&nbsp;₽</span>\n          </div>\n          <AddToCard className={cn($style['cart-item__add-to-card'])} product={product} />\n          <RemoveFromCart id={id} />\n        </div>\n      </section>\n    </>\n  );\n};\n","import React, { FC, useMemo } from 'react';\nimport $style from './style.module.scss';\nimport cn from 'clsx';\nimport { CartItem } from '../cartItem';\nimport { useTranslation } from 'react-i18next';\nimport { useGetCartQuery } from 'src/entities/cart/store';\nimport { gql, useQuery } from '@apollo/client';\nimport { Query } from 'src/app/apollo/type';\nimport { Tcategory } from 'src/entities/category/type';\n\nexport type CartItem = {\n  id: string;\n  sum: number;\n  qty: number;\n  imgUrl?: string;\n  title: string;\n  description?: string;\n  category: Tcategory;\n};\n\ninterface CartListProps {\n  className?: string;\n}\n\nconst productFragmentList = gql`\n  query GetList($ids: [String!], $limit: Int) {\n    products {\n      getMany(input: { pagination: { pageSize: $limit }, ids: $ids }) {\n        data {\n          id\n          name\n          desc\n          photo\n          price\n        }\n        pagination {\n          pageSize\n          pageNumber\n          total\n        }\n      }\n    }\n  }\n`;\n\nexport const CartList: FC<CartListProps> = ({ className }) => {\n  const { t } = useTranslation();\n\n  const { data: cart } = useGetCartQuery(null);\n\n  const cartMap = useMemo(() => {\n    return Object.fromEntries(cart?.map((item) => [item.id, item]) ?? []);\n  }, [cart]);\n\n  const productIds = useMemo(() => {\n    return Object.keys(cartMap);\n  }, [cartMap]);\n\n  const { data: productItems, previousData: productItemsPrev } = useQuery<\n    Pick<Query, 'products'>,\n    { ids: string[]; limit: number }\n  >(productFragmentList, {\n    variables: {\n      ids: productIds,\n      limit: productIds.length,\n    },\n    skip: !productIds.length,\n  });\n\n  const items = useMemo(() => {\n    return cart?.length > 0\n      ? (productItems || productItemsPrev)?.products.getMany.data?.map((item) => ({\n          id: item.id,\n          sum: item.price,\n          qty: cartMap[item.id]?.qty,\n          imgUrl: item.photo,\n          title: item.name,\n          description: item.desc,\n          category: item.category,\n        })) ?? []\n      : [];\n  }, [cartMap, productItems, productItemsPrev, cart]);\n\n  return (\n    <section className={cn(className, $style['cart-list'])}>\n      {items.length === 0 ? (\n        <div className={$style['cart-list__empty']}>{t('translation:cartEmpty')}</div>\n      ) : (\n        items.map((item) => <CartItem key={item.id} {...item} className={$style['cart-list__item']} />)\n      )}\n    </section>\n  );\n};\n","import { gql, useMutation } from '@apollo/client';\nimport React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { Mutation, OrderAddInput } from 'src/app/apollo/type';\nimport { authSelectors } from 'src/entities/auth/store';\nimport { useClearCartMutation, useGetCartQuery } from 'src/entities/cart/store';\nimport { Button } from 'src/shared';\n\ntype Props = {\n  className?: string;\n};\n\nconst orderAddMutation = gql`\n  mutation Mutation($input: OrderAddInput!) {\n    orders {\n      add(input: $input) {\n        status\n      }\n    }\n  }\n`;\n\nexport const AddOrder: FC<Props> = ({ className }) => {\n  const { t } = useTranslation();\n\n  const { data: cart } = useGetCartQuery(null);\n\n  const accessToken = useSelector(authSelectors.getAccess);\n\n  const [orderAdd, { loading }] = useMutation<Pick<Mutation, 'orders'>, { input: OrderAddInput }>(orderAddMutation, {\n    context: {\n      headers: {\n        authorization: `Bearer ${accessToken}`,\n      },\n    },\n  });\n\n  const [clearCart] = useClearCartMutation();\n\n  const onClick = () => {\n    const products = cart.map((item) => ({ id: item.id, quantity: item.qty }));\n\n    orderAdd({\n      variables: {\n        input: {\n          products,\n        },\n      },\n    })\n      .then(() => {\n        clearCart([]);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return <Button className={className} label={t('translation:addOrder')} disabled={loading} onClick={onClick} />;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cart-total\":\"style-module_cart-total-QEFR7\",\"cart-total__sum\":\"style-module_cart-total__sum-wumw4\"};","import React, { FC, useMemo } from 'react';\nimport { AddOrder } from 'src/features/addOrder';\nimport $style from './style.module.scss';\nimport cn from 'clsx';\nimport { useTranslation } from 'react-i18next';\nimport { useGetCartQuery } from 'src/entities/cart/store';\nimport { gql, useQuery } from '@apollo/client';\nimport type { Query } from 'src/app/apollo/type';\nimport { Sum } from 'src/shared/sum';\n\nconst productFragmentList = gql`\n  query GetList($ids: [String!], $limit: Int) {\n    products {\n      getMany(input: { pagination: { pageSize: $limit }, ids: $ids }) {\n        data {\n          id\n          price\n          oldPrice\n        }\n      }\n    }\n  }\n`;\n\nexport const CartTotal: FC = () => {\n  const { t } = useTranslation();\n\n  const { data: cart } = useGetCartQuery(null);\n\n  const cartMap = useMemo(() => {\n    return Object.fromEntries(cart?.map((item) => [item.id, item]) ?? []);\n  }, [cart]);\n\n  const productIds = useMemo(() => {\n    return Object.keys(cartMap);\n  }, [cartMap]);\n\n  const { data: productItems, previousData: productItemsPrev } = useQuery<\n    Pick<Query, 'products'>,\n    { ids: string[]; limit: number }\n  >(productFragmentList, {\n    variables: {\n      ids: productIds,\n      limit: productIds.length,\n    },\n    skip: !productIds.length,\n  });\n\n  const productPricesMap = useMemo(() => {\n    const data = (productItems || productItemsPrev)?.products.getMany.data ?? [];\n    return Object.fromEntries(data.map((item) => [item.id, { sum: item.price, sumBase: item.oldPrice }]));\n  }, [productItems, productItemsPrev]);\n\n  const totals = useMemo(() => {\n    const empty = {\n      sum: 0,\n      sumBase: 0,\n    };\n    return (\n      cart?.reduce((acc, cur) => {\n        acc.sum += (productPricesMap[cur.id]?.sum ?? 0) * cur.qty;\n        acc.sumBase += (productPricesMap[cur.id]?.sumBase ?? 0) * cur.qty;\n        return acc;\n      }, empty) ?? empty\n    );\n  }, [productPricesMap, cart]);\n\n  return (\n    <div className={cn($style['cart-total'])}>\n      <div className={cn($style['cart-total__sum'])}>{t('translation:cartTotal')}:</div>\n      <Sum sum={totals.sum} sumBase={totals.sumBase} />\n      <AddOrder className={$style['cart-total__add-order']} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Container } from 'src/shared/container';\nimport { firstUppercase } from 'src/shared/lib/firstUppercase';\nimport { CartList } from 'src/widgets/cartList';\nimport { CartTotal } from 'src/widgets/cartTotal';\n\nexport const CartPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <main>\n      <Container>\n        <h1>{firstUppercase(t('translation:cartPageTitle'))}</h1>\n      </Container>\n      <Container>\n        <CartList />\n        <CartTotal />\n      </Container>\n    </main>\n  );\n};\n"],"names":["RemoveFromCart","_ref","id","className","removeProduct","_slicedToArray","useRemoveProductFromCartMutation","cart","useGetCartQuery","data","qty","useMemo","_cart$find$qty","_cart$find","find","item","React","type","title","cn","onClick","Icon","name","size","CartItem","sum","imgUrl","description","category","sumFormatted","Intl","NumberFormat","maximumSignificantDigits","format","product","$style","src","AddToCard","productFragmentList","gql","_templateObject","CartList","t","useTranslation","cartMap","_cart$map","Object","fromEntries","map","productIds","keys","_useQuery","useQuery","variables","ids","limit","length","skip","productItems","productItemsPrev","previousData","items","_products$getMany$dat","_ref2","products","getMany","_cartMap$item$id","price","photo","desc","_extends","key","orderAddMutation","_taggedTemplateLiteral","AddOrder","accessToken","useSelector","authSelectors","getAccess","_useMutation2","useMutation","context","headers","authorization","concat","orderAdd","loading","clearCart","useClearCartMutation","Button","label","disabled","quantity","input","then","e","console","log","CartTotal","productPricesMap","sumBase","oldPrice","totals","_cart$reduce","empty","reduce","acc","cur","_productPricesMap$cur","_productPricesMap$cur2","_productPricesMap$cur3","_productPricesMap$cur4","Sum","CartPage","Container","firstUppercase"],"sourceRoot":""}